{"version":3,"sources":["webpack:///./src/components/doc.js","webpack:///./src/templates/docTemplate.js"],"names":["Doc","componentDidMount","headings","document","querySelectorAll","console","log","render","react_default","a","createElement","className","dangerouslySetInnerHTML","__html","this","props","html","React","Component","Template","_ref","data","markdownRemark","doc","__webpack_require__","d","__webpack_exports__","pageQuery"],"mappings":"qIAsBeA,oGAfXC,kBAAA,WACI,IAAMC,EAAWC,SAASC,iBAAiB,MAC3CC,QAAQC,IAAIJ,MAKhBK,OAAA,WACI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,wBAAyB,CAAEC,OAAQC,KAAKC,MAAMC,YAdrEC,IAAMC,WCGT,SAASC,EAATC,GAEZ,IAEOJ,EAFPI,EADDC,KAEQC,eACAN,KAcR,OACIR,EAAAC,EAAAC,cAACa,EAAD,CAAKP,KAAMA,IAxBjBQ,EAAAC,EAAAC,EAAA,4BAAAP,IAAAK,EAAAC,EAAAC,EAAA,8BAAAC,IA4BO,IAAMA,EAAS","file":"component---src-templates-doc-template-js-98ea1f012d34e13c153b.js","sourcesContent":["import React from \"react\";\n\nclass Doc extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    componentDidMount() {\n        const headings = document.querySelectorAll('h2');\n        console.log(headings);\n        \n        \n    }\n\n    render() {\n        return (\n            <div className=\"doc-content\" dangerouslySetInnerHTML={{ __html: this.props.html }} />\n        )\n    }\n\n}\n\nexport default Doc;","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Doc from \"../components/doc\";\n\nexport default function Template({\n  data, \n}) {\n  const { markdownRemark } = data \n  const { html } = markdownRemark\n  \n  // const div = React.createElement('div', {}, html);\n  // console.log(document.querySelectorAll('h2'));\n  \n  // const div = document.createElement('div');\n\n  // console.log(div);\n  \n  // const headings = div.querySelectorAll('h2');\n  // headings.forEach(heading => {\n  //   heading.id = heading.innerText.replace(\" \", \"-\");\n  // });\n\n  return (\n      <Doc html={html}/>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n      }\n    }\n  }\n`"],"sourceRoot":""}