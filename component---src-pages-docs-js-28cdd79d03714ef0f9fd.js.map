{"version":3,"sources":["webpack:///./src/pages/docs.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","DocPage","_ref","Posts","data","allMarkdownRemark","edges","map","edge","a","createElement","key","node","id","to","frontmatter","path","title","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAeeS,UAXC,SAAAC,GAIV,IACEC,EADFD,EAHJE,KACEC,kBAAqBC,MAIpBC,IAAI,SAAAC,GAAI,OAAIV,EAAAW,EAAAC,cAACV,EAAA,EAAD,CAAMW,IAAKH,EAAKI,KAAKC,GAAIC,GAAIN,EAAKI,KAAKG,YAAYC,MAAOR,EAAKI,KAAKG,YAAYE,SAE/F,OAAOnB,EAAAW,EAAAC,cAAA,WAAMP,IAKR,IAAMP,EAAS,kCCjBtB,IAAsBsB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAArB,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAA0B,EAAA/B,EAAA,GAAAgC,EAAAhC,EAAAO,EAAAwB,GAAAE,EAAAjC,EAAA,IAAAkC,EAAAlC,EAAAO,EAAA0B,GAAAjC,EAAAG,EAAAD,EAAA,sBAAAgC,EAAAjB,IAAAjB,EAAA,KAa2BmC,IAAMC,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,gGClEhBC,EAAmB,SAAAhC,GAAiC,IAA9BiC,EAA8BjC,EAA9BiC,SAAUC,EAAoBlC,EAApBkC,cACpC,OAAKA,EAGET,IAAMjB,cAAc2B,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBO,UAAY,CAC3BN,SAAUN,IAAUa,MAAM,CACxBC,SAAUd,IAAUE,OAAOC,aAC1BA,YAGUE","file":"component---src-pages-docs-js-28cdd79d03714ef0f9fd.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\n\nconst DocPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges \n    .map(edge => <Link key={edge.node.id} to={edge.node.frontmatter.path}>{edge.node.frontmatter.title}</Link>)\n\n  return <div>{Posts}</div>\n}\n\nexport default DocPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}